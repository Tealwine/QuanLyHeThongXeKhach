<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSwap2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>(*) Quý khách vui lòng có mặt tại bến xuất phát của xe trước ít nhất 30 phút giờ xe khởi hành, mang theo thông báo đã thanh toán vé thành công có chứa mã vé được gửi từ hệ thống Ampersan Travel. Vui lòng liên hệ Trung tâm tổng đài 1900 xxxx để được hỗ trợ.

(*) Nếu quý khách có nhu cầu trung chuyển, vui lòng liên hệ Tổng đài trung chuyển 1900 xxxx trước khi đặt vé. Chúng tôi không đón/trung chuyển tại những điểm xe trung chuyển không thể tới được.</value>
  </data>
</root>